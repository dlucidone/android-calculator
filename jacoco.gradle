/*
 * Based on jacoco.gradle by Mike Gouline:
 * https://blog.gouline.net/code-coverage-on-android-with-jacoco-92ec90c9355e
 */

apply plugin: 'jacoco'

jacoco {
	toolVersion = "0.7.6.201602180812"
}

project.afterEvaluate {

	def buildTypes = android.buildTypes.collect { type ->
		type.name
	}

	def productFlavors = android.productFlavors.collect { flavor ->
		flavor.name
	}

	if (!productFlavors) productFlavors.add('')

	productFlavors.each { productFlavorName ->
		buildTypes.each { buildTypeName ->
			def sourceName, sourcePath

			if (!productFlavorName) {
				sourceName = sourcePath = "${buildTypeName}"
			} else {
				sourceName = "${productFlavorName}${buildTypeName.capitalize()}"
				sourcePath = "${productFlavorName}/${buildTypeName}"
			}

			def testTaskName = "test${sourceName.capitalize()}UnitTest"

			task "${testTaskName}Coverage" (type:JacocoReport, dependsOn: "$testTaskName") {

				group = "Reporting"
				description = "Generate Jacoco coverage reports on the ${sourceName.capitalize()} build."
				classDirectories = fileTree(
						dir: "${project.buildDir}/intermediates/classes/${sourcePath}",
						excludes: [

								// Exclude UI components:
								'**/*Activity.class',
								'**/*Activity$*.class',
								'**/*Layout.class',
								'**/*Layout$*.class',
								'**/Keypad.class',
								'**/Keypad$*.class',
								'**/*Keypad.class',
								'**/*Keypad$*.class',

								'**/R.class',
								'**/R$*.class',
								'**/*$ViewInjector*.*',
								'**/*$ViewBinder*.*',
								'**/BuildConfig.*',
								'**/Manifest*.*'
						]
				)


				def coverageSourceDirs = [
						"src/main/java",
						"src/$productFlavorName/java",
						"src/$buildTypeName/java"
				]

				additionalSourceDirs = files(coverageSourceDirs)
				sourceDirectories = files(coverageSourceDirs)

				executionData = files("${project.buildDir}/jacoco/${testTaskName}.exec")

				reports {
					name = 'report'
					xml.enabled = true
					html.enabled = true
				}
			}
		}
	}
}
